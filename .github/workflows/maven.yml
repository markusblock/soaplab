# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
          distribution: temurin
          java-version: 17
          java-package: jdk
          cache: maven
    - name: Setup firefox
      uses: browser-actions/setup-firefox@latest
      with: 
          firefox-version: latest
    - run: firefox --version 
    - name: Set up Node.js 16
      uses: actions/setup-node@v3
      with:
          node-version: '16'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar    
    - name: build-test-sonar
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B install sonar:sonar -Dsonar.projectKey=markusblock_soaplab -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=600 -DtestBrowser=firefox -DtestEnvironment=docker -DtestLocale=EN -Dheadless=true
