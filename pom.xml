<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.soaplab</groupId>
	<artifactId>soaplab</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>soaplab</name>
	<description>soaplab project</description>
	
	<properties>
		<java.version>17</java.version>
		<vaadin.version>23.0.7</vaadin.version>
		<microstream.version>06.01.00-MS-GA</microstream.version>
		<equalsverifier.version>3.10</equalsverifier.version>
		<selenide.version>6.4.0</selenide.version>
		<selenium.version>4.1.3</selenium.version>
		<testcontainers.version>1.17.1</testcontainers.version>
		<sonar.organization>markusblock</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
  		<jacoco.version>0.8.8</jacoco.version>
	</properties>

	
    <repositories>
        <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->

        <!-- Main Maven repository -->
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>vaadin-prereleases</id>
            <url>
                https://maven.vaadin.com/vaadin-prereleases/
            </url>
        </repository>
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>
                https://maven.vaadin.com/vaadin-prereleases/
            </url>
        </pluginRepository>
    </pluginRepositories>  
    
    <dependencyManagement>
        <dependencies>
	        
	        <!-- MICROSTREAM -->
	        <dependency>
	            <groupId>one.microstream</groupId>
	            <artifactId>microstream-storage-embedded</artifactId>
	            <version>${microstream.version}</version>
	        </dependency>
	
	        <!-- VAADIN -->
	        <dependency>
	            <groupId>com.vaadin</groupId>
	            <artifactId>vaadin-bom</artifactId>
	            <version>${vaadin.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>        
	        
	         <!-- EQUALSVERIFIER -->       
	        <dependency>
	            <groupId>nl.jqno.equalsverifier</groupId>
	            <artifactId>equalsverifier</artifactId>
	            <version>${equalsverifier.version}</version>
	            <scope>test</scope>
	        </dependency>   
	        
	        <!-- SELENIDE -->
	        <dependency>
	            <groupId>com.codeborne</groupId>
	            <artifactId>selenide</artifactId>
	            <version>${selenide.version}</version>
	            <scope>test</scope>
	        </dependency>
        
            <!-- TESTCONTAINERS -->
	        <dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>junit-jupiter</artifactId>
	            <version>${testcontainers.version}</version>
	            <scope>test</scope>
	        </dependency>
	        <dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>selenium</artifactId>
	           <version>${testcontainers.version}</version>
	            <scope>test</scope>
	        </dependency>
            
        </dependencies>
    </dependencyManagement> 	
	
	<dependencies>
	
		<!-- SPRING  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>	
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-actuator</artifactId>
</dependency>
		
		<!-- MICROSTREAM -->
		<dependency>
			<groupId>one.microstream</groupId>
			<artifactId>microstream-storage-embedded</artifactId>
		</dependency>
		
		<!-- LOMBOK -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>	

		<!-- VAADIN -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <!-- Replace artifactId with vaadin-core to use only free components -->
            <artifactId>vaadin-core</artifactId>
            <exclusions>
                <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
                <exclusion>
                    <groupId>com.vaadin.webjar</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.insites</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymer</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymerelements</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.vaadin</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.webcomponents</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
            <exclusions>
                <!-- Excluding so that webjars are not included. -->
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>		
		
		<!-- TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>nl.jqno.equalsverifier</groupId>
		    <artifactId>equalsverifier</artifactId>
		    <scope>test</scope>
		</dependency>	
		
		<dependency>
		    <groupId>com.codeborne</groupId>
		    <artifactId>selenide</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>junit-jupiter</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>selenium</artifactId>
		    <scope>test</scope>
		</dependency>
	</dependencies>


	<build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- Clean build and startup time for Vaadin apps sometimes may exceed
                             the default Spring Boot's 30sec timeout.  -->
                <configuration>
                    <wait>500</wait>
                    <maxAttempts>240</maxAttempts>
                </configuration>
            </plugin>

            <!--
                      Take care of synchronizing java dependencies and imports in
                      package.json and main.js files.
                      It also creates webpack.config.js if not exists yet.
                  -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
			<plugin>
			  <groupId>org.jacoco</groupId>
			  <artifactId>jacoco-maven-plugin</artifactId>
			  <version>${jacoco.version}</version>
			  <executions>
			     <!--first execution : for preparing JaCoCo runtime agent-->
			      <execution>
			      	<id>prepare-agent</id>
			            <goals>
			             <goal>prepare-agent</goal>
			            </goals>
			      </execution>
			     <!--second execution : for creating code coverage reports-->
			      <execution>
			            <id>report</id>
			            <phase>test</phase>
			               <goals>
			               <goal>report</goal>
			               </goals>
			        </execution>
			    </executions>
			 </plugin>  
			 
			<plugin>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <executions>
			        <execution>		       
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			       			          
        </plugins>
        
	</build>

</project>
